{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aptma\\\\Documents\\\\GitHub\\\\cps530-website\\\\website-app\\\\client\\\\src\\\\pages\\\\Setup\\\\Setup.js\";\nimport 'semantic-ui-css/semantic.min.css';\nimport React, { Component } from 'react';\nimport backend_img from \"../../images/digital_ocean.png\";\nimport sidebar_img from \"../../images/project_sidebar.png\";\nimport project_creation from \"../../images/create_project.png\";\nimport droplet_dash from \"../../images/new_dashboard.png\";\nimport server_image from \"../../images/vps_image.png\";\nimport hardware from \"../../images/server_hardware.png\";\nimport datacenter from \"../../images/datacenter.png\";\nimport droplet from \"../../images/droplet.png\";\nimport creds from \"../../images/server_login.png\";\nimport { Button, Container, Divider, Grid, Header, Transition, Message, Icon, Image, List, Segment } from 'semantic-ui-react';\n/* eslint-disable react/no-multi-comp */\n\n/* Heads up! HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled components for\r\n * such things.\r\n */\n\nvar Setup = function Setup() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    inverted: true,\n    style: {\n      padding: '5em 0em'\n    },\n    vertical: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    stackable: true,\n    verticalAlign: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Header, {\n    inverted: true,\n    as: \"h3\",\n    style: {\n      fontSize: '2em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Setting Up A Back-end Server\"), React.createElement(\"p\", {\n    style: {\n      fontSize: '1.33em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"We recommend setting up a VPS as a permanent, long-term solution for a back-end server. There are many options to begin experimenting with such as Google Cloud, Amazon's AWS, and Digital Ocean. We set up our website to be hosted on Digital Ocean as it is easy to set up, requires very little validation, and offers many different preset frameworks that cater to specific needs, such as Node.\")), React.createElement(Grid.Column, {\n    floated: \"right\",\n    width: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Image, {\n    rounded: true,\n    size: \"large\",\n    src: backend_img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"blue\",\n    style: {\n      width: '280px'\n    },\n    size: \"massive\",\n    animated: \"fade\",\n    onClick: function onClick() {\n      window.open(\"https://digitalocean.com/\", \"_blank\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Button.Content, {\n    visible: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Learn More\"), React.createElement(Button.Content, {\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Visit Digital Ocean\")))))), React.createElement(Divider, {\n    as: \"h3\",\n    className: \"header\",\n    horizontal: true,\n    style: {\n      margin: '3em 0em',\n      textTransform: 'uppercase'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Setting Up Digital Ocean\"), React.createElement(Container, {\n    text: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h3\",\n    style: {\n      fontSize: '2em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Create a New Project\"), React.createElement(\"p\", {\n    style: {\n      fontSize: '1.33em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Before we start creating a VPS, we need to make a project. On the left, you should see a sidebar with an option to create a new project.\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Image, {\n    style: {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      display: 'inline',\n      width: '15em'\n    },\n    rounded: true,\n    size: \"large\",\n    src: sidebar_img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(Image, {\n    style: {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      display: 'inline'\n    },\n    rounded: true,\n    size: \"large\",\n    src: project_creation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    style: {\n      fontSize: '1.33em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Give your project a name, a relevant description, and whatever feedback that applies to you. When they ask for resources, simply skip this step because this is your first project. Resources allow you to transfer old server data to new projects.\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(Header, {\n    as: \"h3\",\n    style: {\n      fontSize: '2em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Create a New Droplet\"), React.createElement(\"p\", {\n    style: {\n      fontSize: '1.33em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Digital Ocean refers to each VPS as a droplet. You should be presented with the following dashboard, ready to create a new VPS. Click the \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Get Started With a Droplet\"), \" button to customize the server as we need.\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Image, {\n    style: {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      width: '50em'\n    },\n    rounded: true,\n    size: \"large\",\n    src: droplet_dash,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    style: {\n      fontSize: '1.33em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"ol\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    style: {\n      padding: '16px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Navigate to the \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"One-click apps\"), \" tab and select \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"NodeJS 8.10.0 on 18.04\"), \".\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Image, {\n    style: {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      width: '50em'\n    },\n    bordered: true,\n    rounded: true,\n    size: \"large\",\n    src: server_image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), React.createElement(\"li\", {\n    style: {\n      padding: '16px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Select a CPU with at least 2 GB of RAM. We went with the $10/mo option.\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Image, {\n    style: {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      width: '50em'\n    },\n    bordered: true,\n    rounded: true,\n    size: \"large\",\n    src: hardware,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), React.createElement(\"li\", {\n    style: {\n      padding: '16px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Select the nearest datacenter. For us, this was Toronto.\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Image, {\n    style: {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      width: '50em'\n    },\n    bordered: true,\n    rounded: true,\n    size: \"large\",\n    src: datacenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), React.createElement(\"li\", {\n    style: {\n      padding: '16px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"We can optionally change hostname but, default is descriptive enough.\"), React.createElement(\"li\", {\n    style: {\n      padding: '16px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Press the large, green \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Create\"), \" button to finish.\"), React.createElement(\"li\", {\n    style: {\n      padding: '16px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"After a few seconds, the server will be created, and run with a 24 hour uptime. We are ready to SSH.\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Image, {\n    style: {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      width: '50em'\n    },\n    bordered: true,\n    rounded: true,\n    size: \"large\",\n    src: droplet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })), React.createElement(Divider, {\n    as: \"h3\",\n    className: \"header\",\n    horizontal: true,\n    style: {\n      margin: '2em 0em',\n      textTransform: 'uppercase'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Setting Up Server Infrastructure\"), React.createElement(Container, {\n    text: true,\n    style: {\n      margin: '2em 0em 4em 0em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h3\",\n    style: {\n      fontSize: '2em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"SSH to your VPS\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"You will be emailed your password for the server.\", React.createElement(\"div\", {\n    style: {\n      padding: '16px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Image, {\n    style: {\n      width: '20em'\n    },\n    bordered: true,\n    rounded: true,\n    size: \"large\",\n    src: creds,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })), \"You need to execute\", React.createElement(\"pre\", {\n    style: {\n      color: '#2BEF00',\n      backgroundColor: '#000000'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"\\n  ssh root@Server_IP_Address\\n          \"), \"Paste in your password, and you will be prompted to change it.\")), React.createElement(Container, {\n    text: true,\n    style: {\n      margin: '2em 0em 4em 0em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h3\",\n    style: {\n      fontSize: '2em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Update NPM and NPX\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"In order to create a React app template, we need to use an NPM command. It is recommended to make sure that your server has the latest NPM version which contains packages for the NPX command.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), \"You need to execute\", React.createElement(\"pre\", {\n    style: {\n      color: '#2BEF00',\n      backgroundColor: '#000000'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"\\n  npm install -g npm\\n          \"))), React.createElement(Container, {\n    text: true,\n    style: {\n      margin: '2em 0em 4em 0em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h3\",\n    style: {\n      fontSize: '2em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Install ExpressJS and MySQL\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"ExpressJS is a simple installation and allows for you to begin working on the back-end for the demonstration.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }), \"You need to execute\", React.createElement(\"pre\", {\n    style: {\n      color: '#2BEF00',\n      backgroundColor: '#000000'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"\\n  npm install express --save\\n          \"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }), \"write more here!!!!!!!!!!!!!!!!!!\")), React.createElement(Segment, {\n    inverted: true,\n    style: {\n      padding: '5em 0em'\n    },\n    vertical: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    stackable: true,\n    verticalAlign: \"middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 8,\n    style: {\n      marginTop: '-8em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(Header, {\n    inverted: true,\n    as: \"h3\",\n    style: {\n      fontSize: '2em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Setting Up A Front-end Web Application\"), React.createElement(\"p\", {\n    style: {\n      fontSize: '1.33em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"Once a back-end server is set up, a React.JS App must be created. We recommend setting up GitHub for better file management and version handling. Once the App is created, the files may be distributed among your team and edited outside of the server with a text editor of their choice in an environement they are comfortable in.\")), React.createElement(Grid.Column, {\n    floated: \"right\",\n    width: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(Header, {\n    icon: React.createElement(Icon, {\n      name: \"react\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }),\n    style: {\n      fontSize: '100px',\n      textAlign: 'right',\n      marginTop: '0.2em'\n    },\n    as: \"h1\",\n    inverted: true,\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }), React.createElement(Header, {\n    icon: React.createElement(Icon, {\n      name: \"node js\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }),\n    style: {\n      fontSize: '100px',\n      marginLeft: '1em'\n    },\n    as: \"h1\",\n    inverted: true,\n    color: \"green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }))), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"blue\",\n    style: {\n      width: '280px'\n    },\n    size: \"massive\",\n    animated: \"fade\",\n    onClick: function onClick() {\n      window.open(\"https://react.semantic-ui.com/\", \"_blank\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(Button.Content, {\n    visible: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"Learn More\"), React.createElement(Button.Content, {\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, \"Visit Semantic UI React\")))))), React.createElement(Divider, {\n    as: \"h3\",\n    className: \"header\",\n    horizontal: true,\n    style: {\n      margin: '3em 0em',\n      textTransform: 'uppercase'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"Creating and Running a React App\"), React.createElement(Container, {\n    text: true,\n    style: {\n      margin: '2em 0em 4em 0em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h3\",\n    style: {\n      fontSize: '2em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \"Creating a React App\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, \"We are ready to create the folder for our web application. A simple command will create the main directory for our application along with subdirectories containing template files to begin creating our website.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }), \"You need to execute\", React.createElement(\"pre\", {\n    style: {\n      color: '#2BEF00',\n      backgroundColor: '#000000'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \"\\n  npx create-react-app my-app\\n          \"), \"After pressing enter, it will take a while to create the files. This is the most CPU intensive process of the installation and where the 2 GB of RAM is useful. Once the creation is complete, you will find a folder named \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, \"my-app\"), \". From here, you may\", React.createElement(\"a\", {\n    href: \"https://help.github.com/articles/adding-an-existing-project-to-github-using-the-command-line/#platform-linux\",\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \" link up a Git repository \"), \"(recommended) or\", React.createElement(\"a\", {\n    href: \"https://docs.oracle.com/cd/E26502_01/html/E29001/remotehowtoaccess-55154.html\",\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \" scp \"), \"the files to your local machine so you and your team may edit the files on their own machines with a text editor of their choice, such as Visual Studio Code.\")), React.createElement(Container, {\n    text: true,\n    style: {\n      margin: '2em 0em 4em 0em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h3\",\n    style: {\n      fontSize: '2em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, \"Running a React App\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, \"After the files are edited or your build is updated and you wish to see the site hosted, you will need to run the React app to view changes. Once you are in the root directory of your React app you can begin the developmental build with an simple command.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }), \"You need to execute\", React.createElement(\"pre\", {\n    style: {\n      color: '#2BEF00',\n      backgroundColor: '#000000'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, \"\\n  npm start\\n          \"), \"Once the program is running without errors, your website will be publicly visible on browsers by simply typing in your VPS IP into the address bar with the port 3000.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }), \"You can visit your site by typing\", React.createElement(\"pre\", {\n    style: {\n      color: '#000000',\n      backgroundColor: '#E8E8E8'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, \"\\n  SERVER_IP_ADDRESS:3000\\n          \"), \"When the web app is running as intended, you can start hosting with an optimized production build. You can create the optimized build with a single command.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }), \"You need to execute\", React.createElement(\"pre\", {\n    style: {\n      color: '#2BEF00',\n      backgroundColor: '#000000'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, \"\\n  npm run build\\n  npm install -g serve\\n  serve -s build\\n          \"), \"Once the build is served, your website will be publicly visible on browsers by simply typing in your VPS IP into the address bar with the port 5000.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }), \"You can visit your site by typing\", React.createElement(\"pre\", {\n    style: {\n      color: '#000000',\n      backgroundColor: '#E8E8E8'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, \"\\n  SERVER_IP_ADDRESS:5000\\n          \"))), React.createElement(Container, {\n    text: true,\n    style: {\n      margin: '2em 0em 4em 0em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h3\",\n    style: {\n      fontSize: '2em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, \"Installing Semantic UI React\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, \"Now it is time to add certain extensions to your React App by using NodeJS. NodeJS has a large library of modules and extensions that allow for certain key features to be added to your application.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }), \"In this application, Semantic UI and other extensions were installed to create a visually appealing website. To install Semantic UI React, we will be using npm again.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }), React.createElement(\"pre\", {\n    style: {\n      color: '#2BEF00',\n      backgroundColor: '#000000'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, \"\\n  npm install semantic-ui-react\\n  npm install semantic-ui-css\\n              \"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }), \"Within your main styles.css file, include this import statement in order to implement the Semantic UI CSS designs.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }), React.createElement(Message, {\n    color: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, \"import 'semantic-ui-css/semantic.min.css';\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }), \"Note: Make sure you refer to \", React.createElement(\"a\", {\n    href: \"https://react.semantic-ui.com/\",\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }, \"Semantic UI React\"), \" and \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }, \"NOT\"), \" \", React.createElement(\"a\", {\n    href: \"https://semantic-ui.com/\",\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }, \"Semantic UI\"), \"since they offer different documentation.\")), React.createElement(Container, {\n    text: true,\n    style: {\n      margin: '2em 0em 4em 0em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h3\",\n    style: {\n      fontSize: '2em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, \"Routing w/ ReactJS\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, \"ReactJS is a great framework for single page applications. However, in order to have a multiple page application, you first need to install a module that allows for routes to be created. There are two ways this can be done within this application. Firstly, you can install React Router, or you can use NodeJS to route the pages within the back-end. For simplicity, the React Router module allowed for optimal routing with minimal code.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }), \"To install it you need to input the following commands into your terminal.\", React.createElement(\"pre\", {\n    style: {\n      color: '#2BEF00',\n      backgroundColor: '#000000'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }, \"\\n  npm install react-router-dom\\n              \"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }), \"From there you can now use the tags BrowserRouter, Switch, and Route in order to create multiple routes for your components. The Route tag renders the individual path for each page. The Switch tag allows for seamless switching between Routes and makes sure to load the first Route onLoad. The BrowserRouter tag allows for the Routes to be put together.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  }), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  }, \"Important: You need to load your Route file inside your index.js file in order to create the routes.\"), \"FIX THIS SECTION CUZ IDK HOW TO DO INSTRUCTIONS\")));\n};\n\nexport default Setup;","map":{"version":3,"sources":["C:\\Users\\aptma\\Documents\\GitHub\\cps530-website\\website-app\\client\\src\\pages\\Setup\\Setup.js"],"names":["React","Component","backend_img","sidebar_img","project_creation","droplet_dash","server_image","hardware","datacenter","droplet","creds","Button","Container","Divider","Grid","Header","Transition","Message","Icon","Image","List","Segment","Setup","padding","fontSize","width","window","open","margin","textTransform","marginLeft","marginRight","display","color","backgroundColor","marginTop","textAlign"],"mappings":";AAAA,OAAO,kCAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,SACEC,MADF,EAEEC,SAFF,EAGEC,OAHF,EAIEC,IAJF,EAKEC,MALF,EAMEC,UANF,EAOEC,OAPF,EAQEC,IARF,EASEC,KATF,EAUEC,IAVF,EAWEC,OAXF,QAYO,mBAZP;AAcA;;AACA;;;;AAIA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,SACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,QAAQ,MAAjB;AAAkB,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAzB;AAAiD,IAAA,QAAQ,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,MAAzB;AAA0B,IAAA,aAAa,EAAC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAG,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,MAAhB;AAAiB,IAAA,EAAE,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAIE;AAAG,IAAA,KAAK,EAAE;AAAEA,MAAAA,QAAQ,EAAE;AAAZ,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+YAJF,CADF,EAYE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,OAAO,EAAC,OAArB;AAA6B,IAAA,KAAK,EAAG,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,OAAO,MAAd;AAAe,IAAA,IAAI,EAAC,OAApB;AAA4B,IAAA,GAAG,EAAGtB,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZF,CADF,EAiBE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,SAAS,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,KAAK,EAAE;AAAEuB,MAAAA,KAAK,EAAE;AAAT,KAA5B;AAAgD,IAAA,IAAI,EAAC,SAArD;AAA+D,IAAA,QAAQ,EAAC,MAAxE;AAA+E,IAAA,OAAO,EAAE,mBAAM;AAAEC,MAAAA,MAAM,CAACC,IAAP,CAAY,2BAAZ,EAAyC,QAAzC;AAAqD,KAArJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD,CAAQ,OAAR;AAAgB,IAAA,OAAO,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,MAAD,CAAQ,OAAR;AAAgB,IAAA,MAAM,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,CADA,CADF,CAjBF,CADF,CADF,EA6BE,oBAAC,OAAD;AACM,IAAA,EAAE,EAAC,IADT;AAEM,IAAA,SAAS,EAAC,QAFhB;AAGM,IAAA,UAAU,MAHhB;AAIM,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,SAAV;AAAqBC,MAAAA,aAAa,EAAE;AAApC,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCA7BF,EAqCI,oBAAC,SAAD;AAAW,IAAA,IAAI,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAgB,IAAA,KAAK,EAAE;AAAEL,MAAAA,QAAQ,EAAE;AAAZ,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAIE;AAAG,IAAA,KAAK,EAAE;AAAEA,MAAAA,QAAQ,EAAE;AAAZ,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gJAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEM,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,WAAW,EAAE,MAAnC;AAA2CC,MAAAA,OAAO,EAAE,QAApD;AAA8DP,MAAAA,KAAK,EAAE;AAArE,KAAd;AAA6F,IAAA,OAAO,MAApG;AAAqG,IAAA,IAAI,EAAC,OAA1G;AAAkH,IAAA,GAAG,EAAGtB,WAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAE2B,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,WAAW,EAAE,MAAnC;AAA2CC,MAAAA,OAAO,EAAE;AAApD,KAAd;AAA8E,IAAA,OAAO,MAArF;AAAsF,IAAA,IAAI,EAAC,OAA3F;AAAmG,IAAA,GAAG,EAAG5B,gBAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAPF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYE;AAAG,IAAA,KAAK,EAAE;AAAEoB,MAAAA,QAAQ,EAAE;AAAZ,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4PAZF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAiBE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAgB,IAAA,KAAK,EAAE;AAAEA,MAAAA,QAAQ,EAAE;AAAZ,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAjBF,EAoBE;AAAG,IAAA,KAAK,EAAE;AAAEA,MAAAA,QAAQ,EAAE;AAAZ,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mJAEY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFZ,gDApBF,EAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEM,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,WAAW,EAAE,MAAnC;AAA2CN,MAAAA,KAAK,EAAE;AAAlD,KAAd;AAA0E,IAAA,OAAO,MAAjF;AAAkF,IAAA,IAAI,EAAC,OAAvF;AAA+F,IAAA,GAAG,EAAGpB,YAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAxBF,EA2BE;AAAG,IAAA,KAAK,EAAE;AAAEmB,MAAAA,QAAQ,EAAE;AAAZ,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,KAAK,EAAE;AAAED,MAAAA,OAAO,EAAE;AAAX,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAhD,sBAA+F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA/F,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEO,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,WAAW,EAAE,MAAnC;AAA2CN,MAAAA,KAAK,EAAE;AAAlD,KAAd;AAA0E,IAAA,QAAQ,MAAlF;AAAmF,IAAA,OAAO,MAA1F;AAA2F,IAAA,IAAI,EAAC,OAAhG;AAAwG,IAAA,GAAG,EAAGnB,YAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAKE;AAAI,IAAA,KAAK,EAAE;AAAEiB,MAAAA,OAAO,EAAE;AAAX,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEO,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,WAAW,EAAE,MAAnC;AAA2CN,MAAAA,KAAK,EAAE;AAAlD,KAAd;AAA0E,IAAA,QAAQ,MAAlF;AAAmF,IAAA,OAAO,MAA1F;AAA2F,IAAA,IAAI,EAAC,OAAhG;AAAwG,IAAA,GAAG,EAAGlB,QAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,EASE;AAAI,IAAA,KAAK,EAAE;AAAEgB,MAAAA,OAAO,EAAE;AAAX,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEO,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,WAAW,EAAE,MAAnC;AAA2CN,MAAAA,KAAK,EAAE;AAAlD,KAAd;AAA0E,IAAA,QAAQ,MAAlF;AAAmF,IAAA,OAAO,MAA1F;AAA2F,IAAA,IAAI,EAAC,OAAhG;AAAwG,IAAA,GAAG,EAAGjB,UAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,EAaE;AAAI,IAAA,KAAK,EAAE;AAAEe,MAAAA,OAAO,EAAE;AAAX,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EAbF,EAcE;AAAI,IAAA,KAAK,EAAE;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAvD,uBAdF,EAeE;AAAI,IAAA,KAAK,EAAE;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4GAfF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEO,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,WAAW,EAAE,MAAnC;AAA2CN,MAAAA,KAAK,EAAE;AAAlD,KAAd;AAA0E,IAAA,QAAQ,MAAlF;AAAmF,IAAA,OAAO,MAA1F;AAA2F,IAAA,IAAI,EAAC,OAAhG;AAAwG,IAAA,GAAG,EAAGhB,OAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAhBF,CADF,CA3BF,EAiDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjDF,CArCJ,EAwFE,oBAAC,OAAD;AACM,IAAA,EAAE,EAAC,IADT;AAEM,IAAA,SAAS,EAAC,QAFhB;AAGM,IAAA,UAAU,MAHhB;AAIM,IAAA,KAAK,EAAE;AAAEmB,MAAAA,MAAM,EAAE,SAAV;AAAqBC,MAAAA,aAAa,EAAE;AAApC,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAxFF,EAgGI,oBAAC,SAAD;AAAW,IAAA,IAAI,MAAf;AAAgB,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM,EAAE;AAAV,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAgB,IAAA,KAAK,EAAE;AAAEJ,MAAAA,QAAQ,EAAE;AAAZ,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAEE;AAAK,IAAA,KAAK,EAAE;AAAED,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE;AAAT,KAAd;AAAiC,IAAA,QAAQ,MAAzC;AAA0C,IAAA,OAAO,MAAjD;AAAkD,IAAA,IAAI,EAAC,OAAvD;AAA+D,IAAA,GAAG,EAAGf,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,yBAME;AAAK,IAAA,KAAK,EAAE;AAAEuB,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,eAAe,EAAE;AAArC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDANF,mEAJF,CAhGJ,EAgHI,oBAAC,SAAD;AAAW,IAAA,IAAI,MAAf;AAAgB,IAAA,KAAK,EAAE;AAAEN,MAAAA,MAAM,EAAE;AAAV,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAgB,IAAA,KAAK,EAAE;AAAEJ,MAAAA,QAAQ,EAAE;AAAZ,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wMAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAGQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR,yBAKE;AAAK,IAAA,KAAK,EAAE;AAAES,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,eAAe,EAAE;AAArC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CALF,CAJF,CAhHJ,EA8HI,oBAAC,SAAD;AAAW,IAAA,IAAI,MAAf;AAAgB,IAAA,KAAK,EAAE;AAAEN,MAAAA,MAAM,EAAE;AAAV,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAgB,IAAA,KAAK,EAAE;AAAEJ,MAAAA,QAAQ,EAAE;AAAZ,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sHAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,yBAIE;AAAK,IAAA,KAAK,EAAE;AAAES,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,eAAe,EAAE;AAArC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,sCAJF,CA9HJ,EA6II,oBAAC,OAAD;AAAS,IAAA,QAAQ,MAAjB;AAAkB,IAAA,KAAK,EAAE;AAAEX,MAAAA,OAAO,EAAE;AAAX,KAAzB;AAAiD,IAAA,QAAQ,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,MAAzB;AAA0B,IAAA,aAAa,EAAC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAG,CAArB;AAA0B,IAAA,KAAK,EAAE;AAAEY,MAAAA,SAAS,EAAE;AAAb,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,MAAhB;AAAiB,IAAA,EAAE,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAE;AAAEX,MAAAA,QAAQ,EAAE;AAAZ,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADF,EAIE;AAAG,IAAA,KAAK,EAAE;AAAEA,MAAAA,QAAQ,EAAE;AAAZ,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+UAJF,CADF,EAWE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,OAAO,EAAC,OAArB;AAA6B,IAAA,KAAK,EAAG,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAG,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf;AAAuC,IAAA,KAAK,EAAE;AAAEA,MAAAA,QAAQ,EAAE,OAAZ;AAAqBY,MAAAA,SAAS,EAAE,OAAhC;AAAyCD,MAAAA,SAAS,EAAE;AAApD,KAA9C;AAA6G,IAAA,EAAE,EAAC,IAAhH;AAAqH,IAAA,QAAQ,MAA7H;AAA8H,IAAA,KAAK,EAAC,MAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAG,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf;AAAyC,IAAA,KAAK,EAAE;AAAEX,MAAAA,QAAQ,EAAE,OAAZ;AAAqBM,MAAAA,UAAU,EAAE;AAAjC,KAAhD;AAA0F,IAAA,EAAE,EAAC,IAA7F;AAAkG,IAAA,QAAQ,MAA1G;AAA2G,IAAA,KAAK,EAAC,OAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAXF,CADF,EAiBE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,SAAS,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,KAAK,EAAE;AAAEL,MAAAA,KAAK,EAAE;AAAT,KAA5B;AAAgD,IAAA,IAAI,EAAC,SAArD;AAA+D,IAAA,QAAQ,EAAC,MAAxE;AAA+E,IAAA,OAAO,EAAE,mBAAM;AAAEC,MAAAA,MAAM,CAACC,IAAP,CAAY,gCAAZ,EAA8C,QAA9C;AAA0D,KAA1J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD,CAAQ,OAAR;AAAgB,IAAA,OAAO,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,MAAD,CAAQ,OAAR;AAAgB,IAAA,MAAM,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFF,CADA,CADF,CAjBF,CADA,CA7IJ,EAyKE,oBAAC,OAAD;AACM,IAAA,EAAE,EAAC,IADT;AAEM,IAAA,SAAS,EAAC,QAFhB;AAGM,IAAA,UAAU,MAHhB;AAIM,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,SAAV;AAAqBC,MAAAA,aAAa,EAAE;AAApC,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAzKF,EAiLE,oBAAC,SAAD;AAAW,IAAA,IAAI,MAAf;AAAgB,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM,EAAE;AAAV,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAgB,IAAA,KAAK,EAAE;AAAEJ,MAAAA,QAAQ,EAAE;AAAZ,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0NAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAGQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR,yBAKE;AAAK,IAAA,KAAK,EAAE;AAAES,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,eAAe,EAAE;AAArC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDALF,kOAS6E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAT7E,0BAUE;AAAG,IAAA,IAAI,EAAC,8GAAR;AAAuH,IAAA,MAAM,EAAC,QAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAVF,sBAYE;AAAG,IAAA,IAAI,EAAC,+EAAR;AAAwF,IAAA,MAAM,EAAC,QAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAZF,kKAJJ,CAjLF,EAqME,oBAAC,SAAD;AAAW,IAAA,IAAI,MAAf;AAAgB,IAAA,KAAK,EAAE;AAAEN,MAAAA,MAAM,EAAE;AAAV,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAgB,IAAA,KAAK,EAAE;AAAEJ,MAAAA,QAAQ,EAAE;AAAZ,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wQAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAGQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR,yBAKE;AAAK,IAAA,KAAK,EAAE;AAAES,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,eAAe,EAAE;AAArC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCALF,4KAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAUQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVR,uCAYE;AAAK,IAAA,KAAK,EAAE;AAAED,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,eAAe,EAAE;AAArC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAZF,kKAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAgBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBR,yBAkBE;AAAK,IAAA,KAAK,EAAE;AAAED,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,eAAe,EAAE;AAArC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EAlBF,0JAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,EAyBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBR,uCA2BE;AAAK,IAAA,KAAK,EAAE;AAAED,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,eAAe,EAAE;AAArC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CA3BF,CAJJ,CArMF,EA0OE,oBAAC,SAAD;AAAW,IAAA,IAAI,MAAf;AAAgB,IAAA,KAAK,EAAE;AAAEN,MAAAA,MAAM,EAAE;AAAV,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAgB,IAAA,KAAK,EAAE;AAAEJ,MAAAA,QAAQ,EAAE;AAAZ,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADR,EAIQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8MAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAGQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR,4KAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE;AAAK,IAAA,KAAK,EAAE;AAAES,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,eAAe,EAAE;AAArC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wFAPF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,wHAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAcE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAdF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,mCAgB+B;AAAG,IAAA,IAAI,EAAC,gCAAR;AAAyC,IAAA,MAAM,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAhB/B,WAgBkH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAhBlH,OAgBuI;AAAG,IAAA,IAAI,EAAC,0BAAR;AAAmC,IAAA,MAAM,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAhBvI,8CAJR,CA1OF,EAmQM,oBAAC,SAAD;AAAW,IAAA,IAAI,MAAf;AAAgB,IAAA,KAAK,EAAE;AAAEN,MAAAA,MAAM,EAAE;AAAV,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAgB,IAAA,KAAK,EAAE;AAAEJ,MAAAA,QAAQ,EAAE;AAAZ,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4bAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,gFAOE;AAAK,IAAA,KAAK,EAAE;AAAES,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,eAAe,EAAE;AAArC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAPF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,sWAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4GAfF,oDAJJ,CAnQN,CADY;AAAA,CAAd;;AA8RA,eAAeZ,KAAf","sourcesContent":["import 'semantic-ui-css/semantic.min.css';\r\nimport React, { Component } from 'react';\r\nimport backend_img from \"../../images/digital_ocean.png\";\r\nimport sidebar_img from \"../../images/project_sidebar.png\";\r\nimport project_creation from \"../../images/create_project.png\";\r\nimport droplet_dash from \"../../images/new_dashboard.png\";\r\nimport server_image from \"../../images/vps_image.png\";\r\nimport hardware from \"../../images/server_hardware.png\";\r\nimport datacenter from \"../../images/datacenter.png\";\r\nimport droplet from \"../../images/droplet.png\";\r\nimport creds from \"../../images/server_login.png\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Transition,\r\n  Message,\r\n  Icon,\r\n  Image,\r\n  List,\r\n  Segment,\r\n} from 'semantic-ui-react'\r\n\r\n/* eslint-disable react/no-multi-comp */\r\n/* Heads up! HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled components for\r\n * such things.\r\n */\r\n\r\nconst Setup = () => (\r\n  <div>\r\n    <Segment inverted style={{ padding: '5em 0em' }} vertical>\r\n      <Grid container stackable verticalAlign='middle'>\r\n        <Grid.Row>\r\n          <Grid.Column width={ 8 }>\r\n            <Header inverted as='h3' style={{ fontSize: '2em' }}>\r\n              Setting Up A Back-end Server\r\n            </Header>\r\n            <p style={{ fontSize: '1.33em' }}>\r\n              We recommend setting up a VPS as a permanent, long-term solution for a back-end server.\r\n              There are many options to begin experimenting with such as Google Cloud, Amazon's AWS, and Digital Ocean.\r\n              We set up our website to be hosted on Digital Ocean as it is easy to set up, requires very little validation, and\r\n              offers many different preset frameworks that cater to specific needs, such as Node.\r\n            </p>\r\n          </Grid.Column>\r\n          <Grid.Column floated='right' width={ 6 }>\r\n            <Image rounded size='large' src={ backend_img } />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column textAlign='center'>\r\n          <Button color='blue' style={{ width: '280px' }} size='massive' animated='fade' onClick={() => { window.open(\"https://digitalocean.com/\", \"_blank\"); }}>\r\n            <Button.Content visible>Learn More</Button.Content>\r\n            <Button.Content hidden>Visit Digital Ocean</Button.Content>\r\n          </Button>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Segment>\r\n    <Divider\r\n          as='h3'\r\n          className='header'\r\n          horizontal\r\n          style={{ margin: '3em 0em', textTransform: 'uppercase' }}\r\n        >\r\n        Setting Up Digital Ocean\r\n    </Divider>\r\n      <Container text>\r\n        <Header as='h3' style={{ fontSize: '2em' }}>\r\n          Create a New Project\r\n        </Header>\r\n        <p style={{ fontSize: '1.33em' }}>\r\n          Before we start creating a VPS, we need to make a project. On the left, you should see a sidebar with an option to create a new project.\r\n        </p>\r\n        <div>\r\n          <Image style={{ marginLeft: 'auto', marginRight: 'auto', display: 'inline', width: '15em' }} rounded size='large' src={ sidebar_img } />\r\n          <Image style={{ marginLeft: 'auto', marginRight: 'auto', display: 'inline' }} rounded size='large' src={ project_creation } />\r\n        </div>\r\n        <br />\r\n        <p style={{ fontSize: '1.33em' }}>\r\n          Give your project a name, a relevant description, and whatever feedback that applies to you. When they ask for resources, simply skip\r\n          this step because this is your first project. Resources allow you to transfer old server data to new projects.\r\n        </p>\r\n        <br />\r\n        <Header as='h3' style={{ fontSize: '2em' }}>\r\n          Create a New Droplet\r\n        </Header>\r\n        <p style={{ fontSize: '1.33em' }}>\r\n          Digital Ocean refers to each VPS as a droplet. You should be presented with the following dashboard, ready to create a new VPS.\r\n          Click the <strong>Get Started With a Droplet</strong> button to customize the server as we need.\r\n        </p>\r\n        <div>\r\n          <Image style={{ marginLeft: 'auto', marginRight: 'auto', width: '50em' }} rounded size='large' src={ droplet_dash } />\r\n        </div>\r\n        <p style={{ fontSize: '1.33em' }}>\r\n          <ol>\r\n            <li style={{ padding: '16px' }}>Navigate to the <strong>One-click apps</strong> tab and select <strong>NodeJS 8.10.0 on 18.04</strong>.</li>\r\n            <div>\r\n              <Image style={{ marginLeft: 'auto', marginRight: 'auto', width: '50em' }} bordered rounded size='large' src={ server_image } />\r\n            </div>\r\n            <li style={{ padding: '16px' }}>Select a CPU with at least 2 GB of RAM. We went with the $10/mo option.</li>\r\n            <div>\r\n              <Image style={{ marginLeft: 'auto', marginRight: 'auto', width: '50em' }} bordered rounded size='large' src={ hardware } />\r\n            </div>\r\n            <li style={{ padding: '16px' }}>Select the nearest datacenter. For us, this was Toronto.</li>\r\n            <div>\r\n              <Image style={{ marginLeft: 'auto', marginRight: 'auto', width: '50em' }} bordered rounded size='large' src={ datacenter } />\r\n            </div>\r\n            <li style={{ padding: '16px' }}>We can optionally change hostname but, default is descriptive enough.</li>\r\n            <li style={{ padding: '16px' }}>Press the large, green <strong>Create</strong> button to finish.</li>\r\n            <li style={{ padding: '16px' }}>After a few seconds, the server will be created, and run with a 24 hour uptime. We are ready to SSH.</li>\r\n            <div>\r\n              <Image style={{ marginLeft: 'auto', marginRight: 'auto', width: '50em' }} bordered rounded size='large' src={ droplet } />\r\n            </div>\r\n          </ol>\r\n        </p>\r\n        <br />\r\n      </Container>\r\n    <Divider\r\n          as='h3'\r\n          className='header'\r\n          horizontal\r\n          style={{ margin: '2em 0em', textTransform: 'uppercase' }}\r\n        >\r\n        Setting Up Server Infrastructure\r\n    </Divider>\r\n      <Container text style={{ margin: '2em 0em 4em 0em' }}>\r\n        <Header as='h3' style={{ fontSize: '2em' }}>\r\n          SSH to your VPS\r\n        </Header>\r\n        <p>\r\n          You will be emailed your password for the server.\r\n          <div style={{ padding: '16px' }}>\r\n            <Image style={{ width: '20em' }} bordered rounded size='large' src={ creds } />\r\n          </div>\r\n          You need to execute\r\n          <pre style={{ color: '#2BEF00', backgroundColor: '#000000' }}>{`\r\n  ssh root@Server_IP_Address\r\n          `}</pre>\r\n          Paste in your password, and you will be prompted to change it.\r\n        </p>\r\n      </Container>\r\n      <Container text style={{ margin: '2em 0em 4em 0em' }}>\r\n        <Header as='h3' style={{ fontSize: '2em' }}>\r\n          Update NPM and NPX\r\n        </Header>\r\n        <p>\r\n          In order to create a React app template, we need to use an NPM command. It is recommended to make sure that your server\r\n          has the latest NPM version which contains packages for the NPX command.\r\n          <br /><br />\r\n          You need to execute\r\n          <pre style={{ color: '#2BEF00', backgroundColor: '#000000' }}>{`\r\n  npm install -g npm\r\n          `}</pre>\r\n        </p>\r\n      </Container>\r\n      <Container text style={{ margin: '2em 0em 4em 0em' }}>\r\n        <Header as='h3' style={{ fontSize: '2em' }}>\r\n          Install ExpressJS and MySQL\r\n        </Header>\r\n        <p>\r\n          ExpressJS is a simple installation and allows for you to begin working on the back-end for the demonstration.\r\n          <br /><br />\r\n          You need to execute\r\n          <pre style={{ color: '#2BEF00', backgroundColor: '#000000' }}>{`\r\n  npm install express --save\r\n          `}</pre>\r\n          <br />\r\n          write more here!!!!!!!!!!!!!!!!!!\r\n        </p>\r\n      </Container>\r\n      <Segment inverted style={{ padding: '5em 0em' }} vertical>\r\n      <Grid container stackable verticalAlign='middle'>\r\n        <Grid.Row>\r\n          <Grid.Column width={ 8 }  style={{ marginTop: '-8em' }}>\r\n            <Header inverted as='h3' style={{ fontSize: '2em' }}>\r\n              Setting Up A Front-end Web Application\r\n            </Header>\r\n            <p style={{ fontSize: '1.33em' }}>\r\n              Once a back-end server is set up, a React.JS App must be created. We recommend setting up GitHub for better file management and version handling.\r\n              Once the App is created, the files may be distributed among your team and edited outside of the server with a text editor of their choice in an\r\n              environement they are comfortable in.\r\n            </p>\r\n          </Grid.Column>\r\n          <Grid.Column floated='right' width={ 6 } >\r\n            <Header icon={ <Icon name='react' /> } style={{ fontSize: '100px', textAlign: 'right', marginTop: '0.2em' }} as='h1' inverted color='blue'/>\r\n            <Header icon={ <Icon name='node js' /> } style={{ fontSize: '100px', marginLeft: '1em' }} as='h1' inverted color='green'/>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column textAlign='center'>\r\n          <Button color='blue' style={{ width: '280px' }} size='massive' animated='fade' onClick={() => { window.open(\"https://react.semantic-ui.com/\", \"_blank\"); }}>\r\n            <Button.Content visible>Learn More</Button.Content>\r\n            <Button.Content hidden>Visit Semantic UI React</Button.Content>\r\n          </Button>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Segment>\r\n    <Divider\r\n          as='h3'\r\n          className='header'\r\n          horizontal\r\n          style={{ margin: '3em 0em', textTransform: 'uppercase' }}\r\n        >\r\n        Creating and Running a React App\r\n    </Divider>\r\n    <Container text style={{ margin: '2em 0em 4em 0em' }}>\r\n        <Header as='h3' style={{ fontSize: '2em' }}>\r\n          Creating a React App\r\n        </Header>\r\n        <p>\r\n          We are ready to create the folder for our web application. A simple command will create the main directory for our application along with\r\n          subdirectories containing template files to begin creating our website. \r\n          <br /><br />\r\n          You need to execute\r\n          <pre style={{ color: '#2BEF00', backgroundColor: '#000000' }}>{`\r\n  npx create-react-app my-app\r\n          `}</pre>\r\n          After pressing enter, it will take a while to create the files. This is the most CPU intensive process of the installation and where the 2 GB of\r\n          RAM is useful. Once the creation is complete, you will find a folder named <strong>my-app</strong>. From here, you may \r\n          <a href=\"https://help.github.com/articles/adding-an-existing-project-to-github-using-the-command-line/#platform-linux\" target=\"_blank\"> link up a Git repository </a>\r\n          (recommended) or \r\n          <a href=\"https://docs.oracle.com/cd/E26502_01/html/E29001/remotehowtoaccess-55154.html\" target=\"_blank\"> scp </a> \r\n          the files to your local machine so you and your team may edit the files on their own machines with a text editor of their choice, such as Visual Studio Code.\r\n        </p>\r\n    </Container>\r\n    <Container text style={{ margin: '2em 0em 4em 0em' }}>\r\n        <Header as='h3' style={{ fontSize: '2em' }}>\r\n          Running a React App\r\n        </Header>\r\n        <p>\r\n          After the files are edited or your build is updated and you wish to see the site hosted, you will need to run the React app to view changes. Once you are in the root\r\n          directory of your React app you can begin the developmental build with an simple command.\r\n          <br /><br />\r\n          You need to execute\r\n          <pre style={{ color: '#2BEF00', backgroundColor: '#000000' }}>{`\r\n  npm start\r\n          `}</pre>\r\n          Once the program is running without errors, your website will be publicly visible on browsers by simply typing in your VPS IP into the address bar with the\r\n          port 3000.\r\n          <br /><br />\r\n          You can visit your site by typing\r\n          <pre style={{ color: '#000000', backgroundColor: '#E8E8E8' }}>{`\r\n  SERVER_IP_ADDRESS:3000\r\n          `}</pre>\r\n          When the web app is running as intended, you can start hosting with an optimized production build. You can create the optimized build with a single command.\r\n          <br /><br />\r\n          You need to execute\r\n          <pre style={{ color: '#2BEF00', backgroundColor: '#000000' }}>{`\r\n  npm run build\r\n  npm install -g serve\r\n  serve -s build\r\n          `}</pre>\r\n          Once the build is served, your website will be publicly visible on browsers by simply typing in your VPS IP into the address bar with the\r\n          port 5000.\r\n          <br /><br />\r\n          You can visit your site by typing\r\n          <pre style={{ color: '#000000', backgroundColor: '#E8E8E8' }}>{`\r\n  SERVER_IP_ADDRESS:5000\r\n          `}</pre>\r\n        </p>\r\n    </Container>\r\n\r\n    <Container text style={{ margin: '2em 0em 4em 0em' }}>\r\n            <Header as='h3' style={{ fontSize: '2em' }}>\r\n              Installing Semantic UI React\r\n            </Header>\r\n            <p>\r\n              Now it is time to add certain extensions to your React App by using NodeJS. NodeJS has a large library of modules and extensions\r\n              that allow for certain key features to be added to your application.\r\n              <br /><br />\r\n              In this application, Semantic UI and other extensions were installed to create a visually appealing website. To install Semantic UI React,\r\n              we will be using npm again.\r\n              <br />\r\n              <pre style={{ color: '#2BEF00', backgroundColor: '#000000' }}>{`\r\n  npm install semantic-ui-react\r\n  npm install semantic-ui-css\r\n              `}</pre>\r\n              <br />\r\n              Within your main styles.css file, include this import statement in order to implement the Semantic UI CSS designs.\r\n              <br />\r\n              <Message color='black'>import 'semantic-ui-css/semantic.min.css';</Message>\r\n              <br />\r\n              Note: Make sure you refer to <a href=\"https://react.semantic-ui.com/\" target=\"_blank\">Semantic UI React</a> and <strong>NOT</strong> <a href=\"https://semantic-ui.com/\" target=\"_blank\">Semantic UI</a>\r\n              since they offer different documentation.\r\n            </p>\r\n    </Container>\r\n\r\n        <Container text style={{ margin: '2em 0em 4em 0em' }}>\r\n            <Header as='h3' style={{ fontSize: '2em' }}>\r\n              Routing w/ ReactJS\r\n            </Header>\r\n            <p>\r\n              ReactJS is a great framework for single page applications. However, in order to have a multiple page application, you\r\n              first need to install a module that allows for routes to be created. There are two ways this can be done within this application.\r\n              Firstly, you can install React Router, or you can use NodeJS to route the pages within the back-end. For simplicity, the React Router\r\n              module allowed for optimal routing with minimal code.\r\n              <br />\r\n              To install it you need to input the following commands into your terminal.\r\n              <pre style={{ color: '#2BEF00', backgroundColor: '#000000' }}>{`\r\n  npm install react-router-dom\r\n              `}</pre>\r\n              <br />\r\n              From there you can now use the tags BrowserRouter, Switch, and Route in order to create multiple routes for your components. The Route tag \r\n              renders the individual path for each page. The Switch tag allows for seamless switching between Routes and makes sure to load the first Route onLoad. \r\n              The BrowserRouter tag allows for the Routes to be put together.\r\n              <br />\r\n              <strong>Important: You need to load your Route file inside your index.js file in order to create the routes.</strong>\r\n\r\n              FIX THIS SECTION CUZ IDK HOW TO DO INSTRUCTIONS\r\n            </p>\r\n    </Container>\r\n  </div>\r\n)\r\nexport default Setup"]},"metadata":{},"sourceType":"module"}